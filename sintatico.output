Terminals unused in grammar

    INTEIRO
    UMINUS


Grammar

    0 $accept: programa $end

    1 programa: declaracoes '{' lista_cmds '}'

    2 declaracoes: linha_decl declaracoes
    3            | linha_decl

    4 $@1: ε

    5 linha_decl: type $@1 lista_id ';'

    6 type: INT
    7     | CHAR

    8 lista_id: ID ',' lista_id
    9         | ID

   10 lista_cmds: cmd ';'
   11           | stmt
   12           | cmd ';' lista_cmds
   13           | stmt lista_cmds

   14 cmd: cmd_saida
   15    | cmd_entrada
   16    | cmd_atribuicao

   17 stmt: stmt_if
   18     | stmt_while
   19     | stmt_for

   20 stmt_if: IF '(' expr ')' '{' lista_cmds '}'
   21        | IF '(' expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'

   22 stmt_while: WHILE '(' expr ')' '{' lista_cmds '}'

   23 stmt_for: FOR '(' for_atr for_expr final_for '{' lista_cmds '}'

   24 for_atr: ';'
   25        | term ';'
   26        | cmd_atribuicao ';'

   27 for_expr: ';'
   28         | expr ';'

   29 final_for: ')'
   30          | cmd_atribuicao ')'

   31 cmd_saida: ESCREVA '(' expr ')'

   32 cmd_entrada: ENTRADA '(' ID ')'

   33 cmd_atribuicao: ID '=' expr

   34 expr: term
   35     | expr binop term2
   36     | expr logop term2

   37 binop: ADD
   38      | SUB
   39      | MUL
   40      | DIV

   41 logop: GE
   42      | LE
   43      | GT
   44      | LT
   45      | EQ
   46      | DIF
   47      | AND
   48      | OR

   49 term: NUM
   50     | ID

   51 term2: NUM
   52      | ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 20 21 22 23 31 32
    ')' (41) 20 21 22 29 30 31 32
    ',' (44) 8
    ';' (59) 5 10 12 24 25 26 27 28
    '=' (61) 33
    '{' (123) 1 20 21 22 23
    '}' (125) 1 20 21 22 23
    error (256)
    INT (258) 6
    CHAR (259) 7
    INTEIRO (260)
    ESCREVA (261) 31
    ENTRADA (262) 32
    NUM <inteiro> (263) 49 51
    ID <cadeia> (264) 8 9 32 33 50 52
    IF (265) 20 21
    ELSE (266) 21
    WHILE (267) 22
    FOR (268) 23
    ADD (269) 37
    SUB (270) 38
    DIV (271) 40
    MUL (272) 39
    AND (273) 47
    OR (274) 48
    LT (275) 44
    GT (276) 43
    LE (277) 42
    GE (278) 41
    EQ (279) 45
    DIF (280) 46
    UMINUS (281)
    THEN (282)


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    programa (36)
        on left: 1
        on right: 0
    declaracoes <node> (37)
        on left: 2 3
        on right: 1 2
    linha_decl <node> (38)
        on left: 5
        on right: 2 3
    $@1 (39)
        on left: 4
        on right: 5
    type <cadeia> (40)
        on left: 6 7
        on right: 5
    lista_id <node> (41)
        on left: 8 9
        on right: 5 8
    lista_cmds <node> (42)
        on left: 10 11 12 13
        on right: 1 12 13 20 21 22 23
    cmd <node> (43)
        on left: 14 15 16
        on right: 10 12
    stmt <node> (44)
        on left: 17 18 19
        on right: 11 13
    stmt_if <node> (45)
        on left: 20 21
        on right: 17
    stmt_while <node> (46)
        on left: 22
        on right: 18
    stmt_for <node> (47)
        on left: 23
        on right: 19
    for_atr <node> (48)
        on left: 24 25 26
        on right: 23
    for_expr <node> (49)
        on left: 27 28
        on right: 23
    final_for <node> (50)
        on left: 29 30
        on right: 23
    cmd_saida <node> (51)
        on left: 31
        on right: 14
    cmd_entrada <node> (52)
        on left: 32
        on right: 15
    cmd_atribuicao <node> (53)
        on left: 33
        on right: 16 26 30
    expr <node> (54)
        on left: 34 35 36
        on right: 20 21 22 28 31 33 35 36
    binop <inteiro> (55)
        on left: 37 38 39 40
        on right: 35
    logop <inteiro> (56)
        on left: 41 42 43 44 45 46 47 48
        on right: 36
    term <node> (57)
        on left: 49 50
        on right: 25 34
    term2 <node> (58)
        on left: 51 52
        on right: 35 36


State 0

    0 $accept: • programa $end

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    programa     go to state 3
    declaracoes  go to state 4
    linha_decl   go to state 5
    type         go to state 6


State 1

    6 type: INT •

    $default  reduce using rule 6 (type)


State 2

    7 type: CHAR •

    $default  reduce using rule 7 (type)


State 3

    0 $accept: programa • $end

    $end  shift, and go to state 7


State 4

    1 programa: declaracoes • '{' lista_cmds '}'

    '{'  shift, and go to state 8


State 5

    2 declaracoes: linha_decl • declaracoes
    3            | linha_decl •

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 3 (declaracoes)

    declaracoes  go to state 9
    linha_decl   go to state 5
    type         go to state 6


State 6

    5 linha_decl: type • $@1 lista_id ';'

    $default  reduce using rule 4 ($@1)

    $@1  go to state 10


State 7

    0 $accept: programa $end •

    $default  accept


State 8

    1 programa: declaracoes '{' • lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ENTRADA  shift, and go to state 12
    ID       shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16

    lista_cmds      go to state 17
    cmd             go to state 18
    stmt            go to state 19
    stmt_if         go to state 20
    stmt_while      go to state 21
    stmt_for        go to state 22
    cmd_saida       go to state 23
    cmd_entrada     go to state 24
    cmd_atribuicao  go to state 25


State 9

    2 declaracoes: linha_decl declaracoes •

    $default  reduce using rule 2 (declaracoes)


State 10

    5 linha_decl: type $@1 • lista_id ';'

    ID  shift, and go to state 26

    lista_id  go to state 27


State 11

   31 cmd_saida: ESCREVA • '(' expr ')'

    '('  shift, and go to state 28


State 12

   32 cmd_entrada: ENTRADA • '(' ID ')'

    '('  shift, and go to state 29


State 13

   33 cmd_atribuicao: ID • '=' expr

    '='  shift, and go to state 30


State 14

   20 stmt_if: IF • '(' expr ')' '{' lista_cmds '}'
   21        | IF • '(' expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'

    '('  shift, and go to state 31


State 15

   22 stmt_while: WHILE • '(' expr ')' '{' lista_cmds '}'

    '('  shift, and go to state 32


State 16

   23 stmt_for: FOR • '(' for_atr for_expr final_for '{' lista_cmds '}'

    '('  shift, and go to state 33


State 17

    1 programa: declaracoes '{' lista_cmds • '}'

    '}'  shift, and go to state 34


State 18

   10 lista_cmds: cmd • ';'
   12           | cmd • ';' lista_cmds

    ';'  shift, and go to state 35


State 19

   11 lista_cmds: stmt •
   13           | stmt • lista_cmds

    ESCREVA  shift, and go to state 11
    ENTRADA  shift, and go to state 12
    ID       shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16

    $default  reduce using rule 11 (lista_cmds)

    lista_cmds      go to state 36
    cmd             go to state 18
    stmt            go to state 19
    stmt_if         go to state 20
    stmt_while      go to state 21
    stmt_for        go to state 22
    cmd_saida       go to state 23
    cmd_entrada     go to state 24
    cmd_atribuicao  go to state 25


State 20

   17 stmt: stmt_if •

    $default  reduce using rule 17 (stmt)


State 21

   18 stmt: stmt_while •

    $default  reduce using rule 18 (stmt)


State 22

   19 stmt: stmt_for •

    $default  reduce using rule 19 (stmt)


State 23

   14 cmd: cmd_saida •

    $default  reduce using rule 14 (cmd)


State 24

   15 cmd: cmd_entrada •

    $default  reduce using rule 15 (cmd)


State 25

   16 cmd: cmd_atribuicao •

    $default  reduce using rule 16 (cmd)


State 26

    8 lista_id: ID • ',' lista_id
    9         | ID •

    ','  shift, and go to state 37

    $default  reduce using rule 9 (lista_id)


State 27

    5 linha_decl: type $@1 lista_id • ';'

    ';'  shift, and go to state 38


State 28

   31 cmd_saida: ESCREVA '(' • expr ')'

    NUM  shift, and go to state 39
    ID   shift, and go to state 40

    expr  go to state 41
    term  go to state 42


State 29

   32 cmd_entrada: ENTRADA '(' • ID ')'

    ID  shift, and go to state 43


State 30

   33 cmd_atribuicao: ID '=' • expr

    NUM  shift, and go to state 39
    ID   shift, and go to state 40

    expr  go to state 44
    term  go to state 42


State 31

   20 stmt_if: IF '(' • expr ')' '{' lista_cmds '}'
   21        | IF '(' • expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'

    NUM  shift, and go to state 39
    ID   shift, and go to state 40

    expr  go to state 45
    term  go to state 42


State 32

   22 stmt_while: WHILE '(' • expr ')' '{' lista_cmds '}'

    NUM  shift, and go to state 39
    ID   shift, and go to state 40

    expr  go to state 46
    term  go to state 42


State 33

   23 stmt_for: FOR '(' • for_atr for_expr final_for '{' lista_cmds '}'

    NUM  shift, and go to state 39
    ID   shift, and go to state 47
    ';'  shift, and go to state 48

    for_atr         go to state 49
    cmd_atribuicao  go to state 50
    term            go to state 51


State 34

    1 programa: declaracoes '{' lista_cmds '}' •

    $default  reduce using rule 1 (programa)


State 35

   10 lista_cmds: cmd ';' •
   12           | cmd ';' • lista_cmds

    ESCREVA  shift, and go to state 11
    ENTRADA  shift, and go to state 12
    ID       shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16

    $default  reduce using rule 10 (lista_cmds)

    lista_cmds      go to state 52
    cmd             go to state 18
    stmt            go to state 19
    stmt_if         go to state 20
    stmt_while      go to state 21
    stmt_for        go to state 22
    cmd_saida       go to state 23
    cmd_entrada     go to state 24
    cmd_atribuicao  go to state 25


State 36

   13 lista_cmds: stmt lista_cmds •

    $default  reduce using rule 13 (lista_cmds)


State 37

    8 lista_id: ID ',' • lista_id

    ID  shift, and go to state 26

    lista_id  go to state 53


State 38

    5 linha_decl: type $@1 lista_id ';' •

    $default  reduce using rule 5 (linha_decl)


State 39

   49 term: NUM •

    $default  reduce using rule 49 (term)


State 40

   50 term: ID •

    $default  reduce using rule 50 (term)


State 41

   31 cmd_saida: ESCREVA '(' expr • ')'
   35 expr: expr • binop term2
   36     | expr • logop term2

    ADD  shift, and go to state 54
    SUB  shift, and go to state 55
    DIV  shift, and go to state 56
    MUL  shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59
    LT   shift, and go to state 60
    GT   shift, and go to state 61
    LE   shift, and go to state 62
    GE   shift, and go to state 63
    EQ   shift, and go to state 64
    DIF  shift, and go to state 65
    ')'  shift, and go to state 66

    binop  go to state 67
    logop  go to state 68


State 42

   34 expr: term •

    $default  reduce using rule 34 (expr)


State 43

   32 cmd_entrada: ENTRADA '(' ID • ')'

    ')'  shift, and go to state 69


State 44

   33 cmd_atribuicao: ID '=' expr •
   35 expr: expr • binop term2
   36     | expr • logop term2

    ADD  shift, and go to state 54
    SUB  shift, and go to state 55
    DIV  shift, and go to state 56
    MUL  shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59
    LT   shift, and go to state 60
    GT   shift, and go to state 61
    LE   shift, and go to state 62
    GE   shift, and go to state 63
    EQ   shift, and go to state 64
    DIF  shift, and go to state 65

    $default  reduce using rule 33 (cmd_atribuicao)

    binop  go to state 67
    logop  go to state 68


State 45

   20 stmt_if: IF '(' expr • ')' '{' lista_cmds '}'
   21        | IF '(' expr • ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'
   35 expr: expr • binop term2
   36     | expr • logop term2

    ADD  shift, and go to state 54
    SUB  shift, and go to state 55
    DIV  shift, and go to state 56
    MUL  shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59
    LT   shift, and go to state 60
    GT   shift, and go to state 61
    LE   shift, and go to state 62
    GE   shift, and go to state 63
    EQ   shift, and go to state 64
    DIF  shift, and go to state 65
    ')'  shift, and go to state 70

    binop  go to state 67
    logop  go to state 68


State 46

   22 stmt_while: WHILE '(' expr • ')' '{' lista_cmds '}'
   35 expr: expr • binop term2
   36     | expr • logop term2

    ADD  shift, and go to state 54
    SUB  shift, and go to state 55
    DIV  shift, and go to state 56
    MUL  shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59
    LT   shift, and go to state 60
    GT   shift, and go to state 61
    LE   shift, and go to state 62
    GE   shift, and go to state 63
    EQ   shift, and go to state 64
    DIF  shift, and go to state 65
    ')'  shift, and go to state 71

    binop  go to state 67
    logop  go to state 68


State 47

   33 cmd_atribuicao: ID • '=' expr
   50 term: ID •

    '='  shift, and go to state 30

    $default  reduce using rule 50 (term)


State 48

   24 for_atr: ';' •

    $default  reduce using rule 24 (for_atr)


State 49

   23 stmt_for: FOR '(' for_atr • for_expr final_for '{' lista_cmds '}'

    NUM  shift, and go to state 39
    ID   shift, and go to state 40
    ';'  shift, and go to state 72

    for_expr  go to state 73
    expr      go to state 74
    term      go to state 42


State 50

   26 for_atr: cmd_atribuicao • ';'

    ';'  shift, and go to state 75


State 51

   25 for_atr: term • ';'

    ';'  shift, and go to state 76


State 52

   12 lista_cmds: cmd ';' lista_cmds •

    $default  reduce using rule 12 (lista_cmds)


State 53

    8 lista_id: ID ',' lista_id •

    $default  reduce using rule 8 (lista_id)


State 54

   37 binop: ADD •

    $default  reduce using rule 37 (binop)


State 55

   38 binop: SUB •

    $default  reduce using rule 38 (binop)


State 56

   40 binop: DIV •

    $default  reduce using rule 40 (binop)


State 57

   39 binop: MUL •

    $default  reduce using rule 39 (binop)


State 58

   47 logop: AND •

    $default  reduce using rule 47 (logop)


State 59

   48 logop: OR •

    $default  reduce using rule 48 (logop)


State 60

   44 logop: LT •

    $default  reduce using rule 44 (logop)


State 61

   43 logop: GT •

    $default  reduce using rule 43 (logop)


State 62

   42 logop: LE •

    $default  reduce using rule 42 (logop)


State 63

   41 logop: GE •

    $default  reduce using rule 41 (logop)


State 64

   45 logop: EQ •

    $default  reduce using rule 45 (logop)


State 65

   46 logop: DIF •

    $default  reduce using rule 46 (logop)


State 66

   31 cmd_saida: ESCREVA '(' expr ')' •

    $default  reduce using rule 31 (cmd_saida)


State 67

   35 expr: expr binop • term2

    NUM  shift, and go to state 77
    ID   shift, and go to state 78

    term2  go to state 79


State 68

   36 expr: expr logop • term2

    NUM  shift, and go to state 77
    ID   shift, and go to state 78

    term2  go to state 80


State 69

   32 cmd_entrada: ENTRADA '(' ID ')' •

    $default  reduce using rule 32 (cmd_entrada)


State 70

   20 stmt_if: IF '(' expr ')' • '{' lista_cmds '}'
   21        | IF '(' expr ')' • '{' lista_cmds '}' ELSE '{' lista_cmds '}'

    '{'  shift, and go to state 81


State 71

   22 stmt_while: WHILE '(' expr ')' • '{' lista_cmds '}'

    '{'  shift, and go to state 82


State 72

   27 for_expr: ';' •

    $default  reduce using rule 27 (for_expr)


State 73

   23 stmt_for: FOR '(' for_atr for_expr • final_for '{' lista_cmds '}'

    ID   shift, and go to state 13
    ')'  shift, and go to state 83

    final_for       go to state 84
    cmd_atribuicao  go to state 85


State 74

   28 for_expr: expr • ';'
   35 expr: expr • binop term2
   36     | expr • logop term2

    ADD  shift, and go to state 54
    SUB  shift, and go to state 55
    DIV  shift, and go to state 56
    MUL  shift, and go to state 57
    AND  shift, and go to state 58
    OR   shift, and go to state 59
    LT   shift, and go to state 60
    GT   shift, and go to state 61
    LE   shift, and go to state 62
    GE   shift, and go to state 63
    EQ   shift, and go to state 64
    DIF  shift, and go to state 65
    ';'  shift, and go to state 86

    binop  go to state 67
    logop  go to state 68


State 75

   26 for_atr: cmd_atribuicao ';' •

    $default  reduce using rule 26 (for_atr)


State 76

   25 for_atr: term ';' •

    $default  reduce using rule 25 (for_atr)


State 77

   51 term2: NUM •

    $default  reduce using rule 51 (term2)


State 78

   52 term2: ID •

    $default  reduce using rule 52 (term2)


State 79

   35 expr: expr binop term2 •

    $default  reduce using rule 35 (expr)


State 80

   36 expr: expr logop term2 •

    $default  reduce using rule 36 (expr)


State 81

   20 stmt_if: IF '(' expr ')' '{' • lista_cmds '}'
   21        | IF '(' expr ')' '{' • lista_cmds '}' ELSE '{' lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ENTRADA  shift, and go to state 12
    ID       shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16

    lista_cmds      go to state 87
    cmd             go to state 18
    stmt            go to state 19
    stmt_if         go to state 20
    stmt_while      go to state 21
    stmt_for        go to state 22
    cmd_saida       go to state 23
    cmd_entrada     go to state 24
    cmd_atribuicao  go to state 25


State 82

   22 stmt_while: WHILE '(' expr ')' '{' • lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ENTRADA  shift, and go to state 12
    ID       shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16

    lista_cmds      go to state 88
    cmd             go to state 18
    stmt            go to state 19
    stmt_if         go to state 20
    stmt_while      go to state 21
    stmt_for        go to state 22
    cmd_saida       go to state 23
    cmd_entrada     go to state 24
    cmd_atribuicao  go to state 25


State 83

   29 final_for: ')' •

    $default  reduce using rule 29 (final_for)


State 84

   23 stmt_for: FOR '(' for_atr for_expr final_for • '{' lista_cmds '}'

    '{'  shift, and go to state 89


State 85

   30 final_for: cmd_atribuicao • ')'

    ')'  shift, and go to state 90


State 86

   28 for_expr: expr ';' •

    $default  reduce using rule 28 (for_expr)


State 87

   20 stmt_if: IF '(' expr ')' '{' lista_cmds • '}'
   21        | IF '(' expr ')' '{' lista_cmds • '}' ELSE '{' lista_cmds '}'

    '}'  shift, and go to state 91


State 88

   22 stmt_while: WHILE '(' expr ')' '{' lista_cmds • '}'

    '}'  shift, and go to state 92


State 89

   23 stmt_for: FOR '(' for_atr for_expr final_for '{' • lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ENTRADA  shift, and go to state 12
    ID       shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16

    lista_cmds      go to state 93
    cmd             go to state 18
    stmt            go to state 19
    stmt_if         go to state 20
    stmt_while      go to state 21
    stmt_for        go to state 22
    cmd_saida       go to state 23
    cmd_entrada     go to state 24
    cmd_atribuicao  go to state 25


State 90

   30 final_for: cmd_atribuicao ')' •

    $default  reduce using rule 30 (final_for)


State 91

   20 stmt_if: IF '(' expr ')' '{' lista_cmds '}' •
   21        | IF '(' expr ')' '{' lista_cmds '}' • ELSE '{' lista_cmds '}'

    ELSE  shift, and go to state 94

    $default  reduce using rule 20 (stmt_if)


State 92

   22 stmt_while: WHILE '(' expr ')' '{' lista_cmds '}' •

    $default  reduce using rule 22 (stmt_while)


State 93

   23 stmt_for: FOR '(' for_atr for_expr final_for '{' lista_cmds • '}'

    '}'  shift, and go to state 95


State 94

   21 stmt_if: IF '(' expr ')' '{' lista_cmds '}' ELSE • '{' lista_cmds '}'

    '{'  shift, and go to state 96


State 95

   23 stmt_for: FOR '(' for_atr for_expr final_for '{' lista_cmds '}' •

    $default  reduce using rule 23 (stmt_for)


State 96

   21 stmt_if: IF '(' expr ')' '{' lista_cmds '}' ELSE '{' • lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ENTRADA  shift, and go to state 12
    ID       shift, and go to state 13
    IF       shift, and go to state 14
    WHILE    shift, and go to state 15
    FOR      shift, and go to state 16

    lista_cmds      go to state 97
    cmd             go to state 18
    stmt            go to state 19
    stmt_if         go to state 20
    stmt_while      go to state 21
    stmt_for        go to state 22
    cmd_saida       go to state 23
    cmd_entrada     go to state 24
    cmd_atribuicao  go to state 25


State 97

   21 stmt_if: IF '(' expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds • '}'

    '}'  shift, and go to state 98


State 98

   21 stmt_if: IF '(' expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}' •

    $default  reduce using rule 21 (stmt_if)
