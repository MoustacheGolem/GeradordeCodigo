Terminals unused in grammar

   VAR
   INTEIRO


Grammar

    0 $accept: programa $end

    1 programa: declaracoes '{' lista_cmds '}'

    2 type: INT
    3     | CHAR

    4 declaracoes: linha_decl
    5            | linha_decl declaracoes

    6 linha_decl: type lista_id ';'

    7 lista_id: ID
    8         | ID ',' lista_id

    9 lista_cmds: cmd ';'
   10           | cmd ';' lista_cmds

   11 cmd: cmd_saida
   12    | cmd_atribuicao

   13 cmd_saida: ESCREVA '(' expr ')'

   14 cmd_atribuicao: ID '=' expr

   15 expr: NUM
   16     | ID
   17     | expr ADD expr
   18     | expr SUB expr
   19     | expr MUL expr
   20     | expr DIV expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13
')' (41) 13
',' (44) 8
';' (59) 6 9 10
'=' (61) 14
'{' (123) 1
'}' (125) 1
error (256)
INT (258) 2
CHAR (259) 3
VAR (260)
INTEIRO (261)
ESCREVA (262) 13
NUM (263) 15
ID (264) 7 8 14 16
ADD (265) 17
SUB (266) 18
DIV (267) 20
MUL (268) 19


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
programa (22)
    on left: 1, on right: 0
type (23)
    on left: 2 3, on right: 6
declaracoes (24)
    on left: 4 5, on right: 1 5
linha_decl (25)
    on left: 6, on right: 4 5
lista_id (26)
    on left: 7 8, on right: 6 8
lista_cmds (27)
    on left: 9 10, on right: 1 10
cmd (28)
    on left: 11 12, on right: 9 10
cmd_saida (29)
    on left: 13, on right: 11
cmd_atribuicao (30)
    on left: 14, on right: 12
expr (31)
    on left: 15 16 17 18 19 20, on right: 13 14 17 18 19 20


state 0

    0 $accept: . programa $end

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    programa     go to state 3
    type         go to state 4
    declaracoes  go to state 5
    linha_decl   go to state 6


state 1

    2 type: INT .

    $default  reduce using rule 2 (type)


state 2

    3 type: CHAR .

    $default  reduce using rule 3 (type)


state 3

    0 $accept: programa . $end

    $end  shift, and go to state 7


state 4

    6 linha_decl: type . lista_id ';'

    ID  shift, and go to state 8

    lista_id  go to state 9


state 5

    1 programa: declaracoes . '{' lista_cmds '}'

    '{'  shift, and go to state 10


state 6

    4 declaracoes: linha_decl .
    5            | linha_decl . declaracoes

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 4 (declaracoes)

    type         go to state 4
    declaracoes  go to state 11
    linha_decl   go to state 6


state 7

    0 $accept: programa $end .

    $default  accept


state 8

    7 lista_id: ID .
    8         | ID . ',' lista_id

    ','  shift, and go to state 12

    $default  reduce using rule 7 (lista_id)


state 9

    6 linha_decl: type lista_id . ';'

    ';'  shift, and go to state 13


state 10

    1 programa: declaracoes '{' . lista_cmds '}'

    ESCREVA  shift, and go to state 14
    ID       shift, and go to state 15

    lista_cmds      go to state 16
    cmd             go to state 17
    cmd_saida       go to state 18
    cmd_atribuicao  go to state 19


state 11

    5 declaracoes: linha_decl declaracoes .

    $default  reduce using rule 5 (declaracoes)


state 12

    8 lista_id: ID ',' . lista_id

    ID  shift, and go to state 8

    lista_id  go to state 20


state 13

    6 linha_decl: type lista_id ';' .

    $default  reduce using rule 6 (linha_decl)


state 14

   13 cmd_saida: ESCREVA . '(' expr ')'

    '('  shift, and go to state 21


state 15

   14 cmd_atribuicao: ID . '=' expr

    '='  shift, and go to state 22


state 16

    1 programa: declaracoes '{' lista_cmds . '}'

    '}'  shift, and go to state 23


state 17

    9 lista_cmds: cmd . ';'
   10           | cmd . ';' lista_cmds

    ';'  shift, and go to state 24


state 18

   11 cmd: cmd_saida .

    $default  reduce using rule 11 (cmd)


state 19

   12 cmd: cmd_atribuicao .

    $default  reduce using rule 12 (cmd)


state 20

    8 lista_id: ID ',' lista_id .

    $default  reduce using rule 8 (lista_id)


state 21

   13 cmd_saida: ESCREVA '(' . expr ')'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26

    expr  go to state 27


state 22

   14 cmd_atribuicao: ID '=' . expr

    NUM  shift, and go to state 25
    ID   shift, and go to state 26

    expr  go to state 28


state 23

    1 programa: declaracoes '{' lista_cmds '}' .

    $default  reduce using rule 1 (programa)


state 24

    9 lista_cmds: cmd ';' .
   10           | cmd ';' . lista_cmds

    ESCREVA  shift, and go to state 14
    ID       shift, and go to state 15

    $default  reduce using rule 9 (lista_cmds)

    lista_cmds      go to state 29
    cmd             go to state 17
    cmd_saida       go to state 18
    cmd_atribuicao  go to state 19


state 25

   15 expr: NUM .

    $default  reduce using rule 15 (expr)


state 26

   16 expr: ID .

    $default  reduce using rule 16 (expr)


state 27

   13 cmd_saida: ESCREVA '(' expr . ')'
   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    ADD  shift, and go to state 30
    SUB  shift, and go to state 31
    DIV  shift, and go to state 32
    MUL  shift, and go to state 33
    ')'  shift, and go to state 34


state 28

   14 cmd_atribuicao: ID '=' expr .
   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    ADD  shift, and go to state 30
    SUB  shift, and go to state 31
    DIV  shift, and go to state 32
    MUL  shift, and go to state 33

    $default  reduce using rule 14 (cmd_atribuicao)


state 29

   10 lista_cmds: cmd ';' lista_cmds .

    $default  reduce using rule 10 (lista_cmds)


state 30

   17 expr: expr ADD . expr

    NUM  shift, and go to state 25
    ID   shift, and go to state 26

    expr  go to state 35


state 31

   18 expr: expr SUB . expr

    NUM  shift, and go to state 25
    ID   shift, and go to state 26

    expr  go to state 36


state 32

   20 expr: expr DIV . expr

    NUM  shift, and go to state 25
    ID   shift, and go to state 26

    expr  go to state 37


state 33

   19 expr: expr MUL . expr

    NUM  shift, and go to state 25
    ID   shift, and go to state 26

    expr  go to state 38


state 34

   13 cmd_saida: ESCREVA '(' expr ')' .

    $default  reduce using rule 13 (cmd_saida)


state 35

   17 expr: expr . ADD expr
   17     | expr ADD expr .
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr

    DIV  shift, and go to state 32
    MUL  shift, and go to state 33

    $default  reduce using rule 17 (expr)


state 36

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   18     | expr SUB expr .
   19     | expr . MUL expr
   20     | expr . DIV expr

    DIV  shift, and go to state 32
    MUL  shift, and go to state 33

    $default  reduce using rule 18 (expr)


state 37

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   20     | expr . DIV expr
   20     | expr DIV expr .

    $default  reduce using rule 20 (expr)


state 38

   17 expr: expr . ADD expr
   18     | expr . SUB expr
   19     | expr . MUL expr
   19     | expr MUL expr .
   20     | expr . DIV expr

    $default  reduce using rule 19 (expr)
