Terminals unused in grammar

   VAR
   INTEIRO


Grammar

    0 $accept: programa $end

    1 programa: declaracoes '{' lista_cmds '}'

    2 type: INT

    3 declaracoes: linha_decl
    4            | linha_decl declaracoes

    5 linha_decl: type lista_id ';'

    6 lista_id: ID
    7         | ID ',' lista_id

    8 lista_cmds: cmd ';'
    9           | cmd ';' lista_cmds

   10 cmd: cmd_saida
   11    | cmd_atribuicao

   12 cmd_saida: ESCREVA '(' expr ')'

   13 cmd_atribuicao: ID '=' expr

   14 expr: NUM
   15     | ID
   16     | binop expr expr_r

   17 expr_r: binop expr expr_r
   18       | NUM
   19       | ID

   20 binop: ADD
   21      | SUB
   22      | MUL
   23      | DIV


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12
')' (41) 12
',' (44) 7
';' (59) 5 8 9
'=' (61) 13
'{' (123) 1
'}' (125) 1
error (256)
INT (258) 2
VAR (259)
INTEIRO (260)
ESCREVA (261) 12
NUM (262) 14 18
ID (263) 6 7 13 15 19
ADD (264) 20
SUB (265) 21
DIV (266) 23
MUL (267) 22


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
programa (21)
    on left: 1, on right: 0
type (22)
    on left: 2, on right: 5
declaracoes (23)
    on left: 3 4, on right: 1 4
linha_decl (24)
    on left: 5, on right: 3 4
lista_id (25)
    on left: 6 7, on right: 5 7
lista_cmds (26)
    on left: 8 9, on right: 1 9
cmd (27)
    on left: 10 11, on right: 8 9
cmd_saida (28)
    on left: 12, on right: 10
cmd_atribuicao (29)
    on left: 13, on right: 11
expr (30)
    on left: 14 15 16, on right: 12 13 16 17
expr_r (31)
    on left: 17 18 19, on right: 16 17
binop (32)
    on left: 20 21 22 23, on right: 16 17


state 0

    0 $accept: . programa $end

    INT  shift, and go to state 1

    programa     go to state 2
    type         go to state 3
    declaracoes  go to state 4
    linha_decl   go to state 5


state 1

    2 type: INT .

    $default  reduce using rule 2 (type)


state 2

    0 $accept: programa . $end

    $end  shift, and go to state 6


state 3

    5 linha_decl: type . lista_id ';'

    ID  shift, and go to state 7

    lista_id  go to state 8


state 4

    1 programa: declaracoes . '{' lista_cmds '}'

    '{'  shift, and go to state 9


state 5

    3 declaracoes: linha_decl .
    4            | linha_decl . declaracoes

    INT  shift, and go to state 1

    $default  reduce using rule 3 (declaracoes)

    type         go to state 3
    declaracoes  go to state 10
    linha_decl   go to state 5


state 6

    0 $accept: programa $end .

    $default  accept


state 7

    6 lista_id: ID .
    7         | ID . ',' lista_id

    ','  shift, and go to state 11

    $default  reduce using rule 6 (lista_id)


state 8

    5 linha_decl: type lista_id . ';'

    ';'  shift, and go to state 12


state 9

    1 programa: declaracoes '{' . lista_cmds '}'

    ESCREVA  shift, and go to state 13
    ID       shift, and go to state 14

    lista_cmds      go to state 15
    cmd             go to state 16
    cmd_saida       go to state 17
    cmd_atribuicao  go to state 18


state 10

    4 declaracoes: linha_decl declaracoes .

    $default  reduce using rule 4 (declaracoes)


state 11

    7 lista_id: ID ',' . lista_id

    ID  shift, and go to state 7

    lista_id  go to state 19


state 12

    5 linha_decl: type lista_id ';' .

    $default  reduce using rule 5 (linha_decl)


state 13

   12 cmd_saida: ESCREVA . '(' expr ')'

    '('  shift, and go to state 20


state 14

   13 cmd_atribuicao: ID . '=' expr

    '='  shift, and go to state 21


state 15

    1 programa: declaracoes '{' lista_cmds . '}'

    '}'  shift, and go to state 22


state 16

    8 lista_cmds: cmd . ';'
    9           | cmd . ';' lista_cmds

    ';'  shift, and go to state 23


state 17

   10 cmd: cmd_saida .

    $default  reduce using rule 10 (cmd)


state 18

   11 cmd: cmd_atribuicao .

    $default  reduce using rule 11 (cmd)


state 19

    7 lista_id: ID ',' lista_id .

    $default  reduce using rule 7 (lista_id)


state 20

   12 cmd_saida: ESCREVA '(' . expr ')'

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    DIV  shift, and go to state 28
    MUL  shift, and go to state 29

    expr   go to state 30
    binop  go to state 31


state 21

   13 cmd_atribuicao: ID '=' . expr

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    DIV  shift, and go to state 28
    MUL  shift, and go to state 29

    expr   go to state 32
    binop  go to state 31


state 22

    1 programa: declaracoes '{' lista_cmds '}' .

    $default  reduce using rule 1 (programa)


state 23

    8 lista_cmds: cmd ';' .
    9           | cmd ';' . lista_cmds

    ESCREVA  shift, and go to state 13
    ID       shift, and go to state 14

    $default  reduce using rule 8 (lista_cmds)

    lista_cmds      go to state 33
    cmd             go to state 16
    cmd_saida       go to state 17
    cmd_atribuicao  go to state 18


state 24

   14 expr: NUM .

    $default  reduce using rule 14 (expr)


state 25

   15 expr: ID .

    $default  reduce using rule 15 (expr)


state 26

   20 binop: ADD .

    $default  reduce using rule 20 (binop)


state 27

   21 binop: SUB .

    $default  reduce using rule 21 (binop)


state 28

   23 binop: DIV .

    $default  reduce using rule 23 (binop)


state 29

   22 binop: MUL .

    $default  reduce using rule 22 (binop)


state 30

   12 cmd_saida: ESCREVA '(' expr . ')'

    ')'  shift, and go to state 34


state 31

   16 expr: binop . expr expr_r

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    DIV  shift, and go to state 28
    MUL  shift, and go to state 29

    expr   go to state 35
    binop  go to state 31


state 32

   13 cmd_atribuicao: ID '=' expr .

    $default  reduce using rule 13 (cmd_atribuicao)


state 33

    9 lista_cmds: cmd ';' lista_cmds .

    $default  reduce using rule 9 (lista_cmds)


state 34

   12 cmd_saida: ESCREVA '(' expr ')' .

    $default  reduce using rule 12 (cmd_saida)


state 35

   16 expr: binop expr . expr_r

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    DIV  shift, and go to state 28
    MUL  shift, and go to state 29

    expr_r  go to state 38
    binop   go to state 39


state 36

   18 expr_r: NUM .

    $default  reduce using rule 18 (expr_r)


state 37

   19 expr_r: ID .

    $default  reduce using rule 19 (expr_r)


state 38

   16 expr: binop expr expr_r .

    $default  reduce using rule 16 (expr)


state 39

   17 expr_r: binop . expr expr_r

    NUM  shift, and go to state 24
    ID   shift, and go to state 25
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    DIV  shift, and go to state 28
    MUL  shift, and go to state 29

    expr   go to state 40
    binop  go to state 31


state 40

   17 expr_r: binop expr . expr_r

    NUM  shift, and go to state 36
    ID   shift, and go to state 37
    ADD  shift, and go to state 26
    SUB  shift, and go to state 27
    DIV  shift, and go to state 28
    MUL  shift, and go to state 29

    expr_r  go to state 41
    binop   go to state 39


state 41

   17 expr_r: binop expr expr_r .

    $default  reduce using rule 17 (expr_r)
