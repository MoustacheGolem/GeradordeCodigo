Terminals unused in grammar

   VAR
   INTEIRO


Grammar

    0 $accept: programa $end

    1 programa: declaracoes '{' lista_cmds '}'

    2 declaracoes: linha_decl
    3            | linha_decl declaracoes

    4 $@1: /* empty */

    5 linha_decl: type $@1 lista_id ';'

    6 type: INT
    7     | CHAR

    8 lista_id: ID
    9         | ID ',' lista_id

   10 lista_cmds: cmd ';'
   11           | cmd ';' lista_cmds

   12 cmd: cmd_saida
   13    | cmd_atribuicao

   14 cmd_saida: ESCREVA '(' expr ')'

   15 cmd_atribuicao: ID '=' expr

   16 expr: term
   17     | expr binop term

   18 term: NUM
   19     | ID

   20 binop: ADD
   21      | SUB
   22      | MUL
   23      | DIV


Terminals, with rules where they appear

$end (0) 0
'(' (40) 14
')' (41) 14
',' (44) 9
';' (59) 5 10 11
'=' (61) 15
'{' (123) 1
'}' (125) 1
error (256)
INT (258) 6
CHAR (259) 7
VAR (260)
INTEIRO (261)
ESCREVA (262) 14
NUM (263) 18
ID (264) 8 9 15 19
ADD (265) 20
SUB (266) 21
DIV (267) 23
MUL (268) 22


Nonterminals, with rules where they appear

$accept (21)
    on left: 0
programa (22)
    on left: 1, on right: 0
declaracoes (23)
    on left: 2 3, on right: 1 3
linha_decl (24)
    on left: 5, on right: 2 3
$@1 (25)
    on left: 4, on right: 5
type (26)
    on left: 6 7, on right: 5
lista_id (27)
    on left: 8 9, on right: 5 9
lista_cmds (28)
    on left: 10 11, on right: 1 11
cmd (29)
    on left: 12 13, on right: 10 11
cmd_saida (30)
    on left: 14, on right: 12
cmd_atribuicao (31)
    on left: 15, on right: 13
expr (32)
    on left: 16 17, on right: 14 15 17
term (33)
    on left: 18 19, on right: 16 17
binop (34)
    on left: 20 21 22 23, on right: 17


state 0

    0 $accept: . programa $end

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    programa     go to state 3
    declaracoes  go to state 4
    linha_decl   go to state 5
    type         go to state 6


state 1

    6 type: INT .

    $default  reduce using rule 6 (type)


state 2

    7 type: CHAR .

    $default  reduce using rule 7 (type)


state 3

    0 $accept: programa . $end

    $end  shift, and go to state 7


state 4

    1 programa: declaracoes . '{' lista_cmds '}'

    '{'  shift, and go to state 8


state 5

    2 declaracoes: linha_decl .
    3            | linha_decl . declaracoes

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 2 (declaracoes)

    declaracoes  go to state 9
    linha_decl   go to state 5
    type         go to state 6


state 6

    5 linha_decl: type . $@1 lista_id ';'

    $default  reduce using rule 4 ($@1)

    $@1  go to state 10


state 7

    0 $accept: programa $end .

    $default  accept


state 8

    1 programa: declaracoes '{' . lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ID       shift, and go to state 12

    lista_cmds      go to state 13
    cmd             go to state 14
    cmd_saida       go to state 15
    cmd_atribuicao  go to state 16


state 9

    3 declaracoes: linha_decl declaracoes .

    $default  reduce using rule 3 (declaracoes)


state 10

    5 linha_decl: type $@1 . lista_id ';'

    ID  shift, and go to state 17

    lista_id  go to state 18


state 11

   14 cmd_saida: ESCREVA . '(' expr ')'

    '('  shift, and go to state 19


state 12

   15 cmd_atribuicao: ID . '=' expr

    '='  shift, and go to state 20


state 13

    1 programa: declaracoes '{' lista_cmds . '}'

    '}'  shift, and go to state 21


state 14

   10 lista_cmds: cmd . ';'
   11           | cmd . ';' lista_cmds

    ';'  shift, and go to state 22


state 15

   12 cmd: cmd_saida .

    $default  reduce using rule 12 (cmd)


state 16

   13 cmd: cmd_atribuicao .

    $default  reduce using rule 13 (cmd)


state 17

    8 lista_id: ID .
    9         | ID . ',' lista_id

    ','  shift, and go to state 23

    $default  reduce using rule 8 (lista_id)


state 18

    5 linha_decl: type $@1 lista_id . ';'

    ';'  shift, and go to state 24


state 19

   14 cmd_saida: ESCREVA '(' . expr ')'

    NUM  shift, and go to state 25
    ID   shift, and go to state 26

    expr  go to state 27
    term  go to state 28


state 20

   15 cmd_atribuicao: ID '=' . expr

    NUM  shift, and go to state 25
    ID   shift, and go to state 26

    expr  go to state 29
    term  go to state 28


state 21

    1 programa: declaracoes '{' lista_cmds '}' .

    $default  reduce using rule 1 (programa)


state 22

   10 lista_cmds: cmd ';' .
   11           | cmd ';' . lista_cmds

    ESCREVA  shift, and go to state 11
    ID       shift, and go to state 12

    $default  reduce using rule 10 (lista_cmds)

    lista_cmds      go to state 30
    cmd             go to state 14
    cmd_saida       go to state 15
    cmd_atribuicao  go to state 16


state 23

    9 lista_id: ID ',' . lista_id

    ID  shift, and go to state 17

    lista_id  go to state 31


state 24

    5 linha_decl: type $@1 lista_id ';' .

    $default  reduce using rule 5 (linha_decl)


state 25

   18 term: NUM .

    $default  reduce using rule 18 (term)


state 26

   19 term: ID .

    $default  reduce using rule 19 (term)


state 27

   14 cmd_saida: ESCREVA '(' expr . ')'
   17 expr: expr . binop term

    ADD  shift, and go to state 32
    SUB  shift, and go to state 33
    DIV  shift, and go to state 34
    MUL  shift, and go to state 35
    ')'  shift, and go to state 36

    binop  go to state 37


state 28

   16 expr: term .

    $default  reduce using rule 16 (expr)


state 29

   15 cmd_atribuicao: ID '=' expr .
   17 expr: expr . binop term

    ADD  shift, and go to state 32
    SUB  shift, and go to state 33
    DIV  shift, and go to state 34
    MUL  shift, and go to state 35

    $default  reduce using rule 15 (cmd_atribuicao)

    binop  go to state 37


state 30

   11 lista_cmds: cmd ';' lista_cmds .

    $default  reduce using rule 11 (lista_cmds)


state 31

    9 lista_id: ID ',' lista_id .

    $default  reduce using rule 9 (lista_id)


state 32

   20 binop: ADD .

    $default  reduce using rule 20 (binop)


state 33

   21 binop: SUB .

    $default  reduce using rule 21 (binop)


state 34

   23 binop: DIV .

    $default  reduce using rule 23 (binop)


state 35

   22 binop: MUL .

    $default  reduce using rule 22 (binop)


state 36

   14 cmd_saida: ESCREVA '(' expr ')' .

    $default  reduce using rule 14 (cmd_saida)


state 37

   17 expr: expr binop . term

    NUM  shift, and go to state 25
    ID   shift, and go to state 26

    term  go to state 38


state 38

   17 expr: expr binop term .

    $default  reduce using rule 17 (expr)
