Terminals unused in grammar

    INTEIRO
    FOR
    RETURN
    EXTERN
    VOID
    UMINUS


Grammar

    0 $accept: programa $end

    1 programa: declaracoes '{' lista_cmds '}'

    2 declaracoes: linha_decl declaracoes
    3            | linha_decl

    4 $@1: ε

    5 linha_decl: type $@1 lista_id ';'

    6 type: INT
    7     | CHAR

    8 lista_id: ID ',' lista_id
    9         | ID

   10 lista_cmds: cmd ';'
   11           | stmt
   12           | cmd ';' lista_cmds
   13           | stmt lista_cmds

   14 cmd: cmd_saida
   15    | cmd_atribuicao

   16 stmt: stmt_if
   17     | stmt_while

   18 stmt_if: IF '(' expr ')' '{' lista_cmds '}'
   19        | IF '(' expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'

   20 stmt_while: WHILE '(' expr ')' '{' lista_cmds '}'

   21 cmd_saida: ESCREVA '(' expr ')'

   22 cmd_atribuicao: ID '=' expr

   23 expr: term
   24     | expr binop term2

   25 binop: ADD
   26      | SUB
   27      | MUL
   28      | DIV

   29 term: NUM
   30     | ID

   31 term2: NUM
   32      | ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 18 19 20 21
    ')' (41) 18 19 20 21
    ',' (44) 8
    ';' (59) 5 10 12
    '=' (61) 22
    '{' (123) 1 18 19 20
    '}' (125) 1 18 19 20
    error (256)
    INT (258) 6
    CHAR (259) 7
    INTEIRO (260)
    ESCREVA (261) 21
    NUM <inteiro> (262) 29 31
    ID <cadeia> (263) 8 9 22 30 32
    IF (264) 18 19
    ELSE (265) 19
    WHILE (266) 20
    FOR (267)
    RETURN (268)
    EXTERN (269)
    VOID (270)
    ADD (271) 25
    SUB (272) 26
    DIV (273) 28
    MUL (274) 27
    UMINUS (275)
    THEN (276)


Nonterminals, with rules where they appear

    $accept (29)
        on left: 0
    programa (30)
        on left: 1
        on right: 0
    declaracoes <node> (31)
        on left: 2 3
        on right: 1 2
    linha_decl <node> (32)
        on left: 5
        on right: 2 3
    $@1 (33)
        on left: 4
        on right: 5
    type <cadeia> (34)
        on left: 6 7
        on right: 5
    lista_id <node> (35)
        on left: 8 9
        on right: 5 8
    lista_cmds <node> (36)
        on left: 10 11 12 13
        on right: 1 12 13 18 19 20
    cmd <node> (37)
        on left: 14 15
        on right: 10 12
    stmt <node> (38)
        on left: 16 17
        on right: 11 13
    stmt_if <node> (39)
        on left: 18 19
        on right: 16
    stmt_while <node> (40)
        on left: 20
        on right: 17
    cmd_saida <node> (41)
        on left: 21
        on right: 14
    cmd_atribuicao <node> (42)
        on left: 22
        on right: 15
    expr <inteiro> (43)
        on left: 23 24
        on right: 18 19 20 21 22 24
    binop <inteiro> (44)
        on left: 25 26 27 28
        on right: 24
    term <inteiro> (45)
        on left: 29 30
        on right: 23
    term2 <inteiro> (46)
        on left: 31 32
        on right: 24


State 0

    0 $accept: • programa $end

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    programa     go to state 3
    declaracoes  go to state 4
    linha_decl   go to state 5
    type         go to state 6


State 1

    6 type: INT •

    $default  reduce using rule 6 (type)


State 2

    7 type: CHAR •

    $default  reduce using rule 7 (type)


State 3

    0 $accept: programa • $end

    $end  shift, and go to state 7


State 4

    1 programa: declaracoes • '{' lista_cmds '}'

    '{'  shift, and go to state 8


State 5

    2 declaracoes: linha_decl • declaracoes
    3            | linha_decl •

    INT   shift, and go to state 1
    CHAR  shift, and go to state 2

    $default  reduce using rule 3 (declaracoes)

    declaracoes  go to state 9
    linha_decl   go to state 5
    type         go to state 6


State 6

    5 linha_decl: type • $@1 lista_id ';'

    $default  reduce using rule 4 ($@1)

    $@1  go to state 10


State 7

    0 $accept: programa $end •

    $default  accept


State 8

    1 programa: declaracoes '{' • lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ID       shift, and go to state 12
    IF       shift, and go to state 13
    WHILE    shift, and go to state 14

    lista_cmds      go to state 15
    cmd             go to state 16
    stmt            go to state 17
    stmt_if         go to state 18
    stmt_while      go to state 19
    cmd_saida       go to state 20
    cmd_atribuicao  go to state 21


State 9

    2 declaracoes: linha_decl declaracoes •

    $default  reduce using rule 2 (declaracoes)


State 10

    5 linha_decl: type $@1 • lista_id ';'

    ID  shift, and go to state 22

    lista_id  go to state 23


State 11

   21 cmd_saida: ESCREVA • '(' expr ')'

    '('  shift, and go to state 24


State 12

   22 cmd_atribuicao: ID • '=' expr

    '='  shift, and go to state 25


State 13

   18 stmt_if: IF • '(' expr ')' '{' lista_cmds '}'
   19        | IF • '(' expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'

    '('  shift, and go to state 26


State 14

   20 stmt_while: WHILE • '(' expr ')' '{' lista_cmds '}'

    '('  shift, and go to state 27


State 15

    1 programa: declaracoes '{' lista_cmds • '}'

    '}'  shift, and go to state 28


State 16

   10 lista_cmds: cmd • ';'
   12           | cmd • ';' lista_cmds

    ';'  shift, and go to state 29


State 17

   11 lista_cmds: stmt •
   13           | stmt • lista_cmds

    ESCREVA  shift, and go to state 11
    ID       shift, and go to state 12
    IF       shift, and go to state 13
    WHILE    shift, and go to state 14

    $default  reduce using rule 11 (lista_cmds)

    lista_cmds      go to state 30
    cmd             go to state 16
    stmt            go to state 17
    stmt_if         go to state 18
    stmt_while      go to state 19
    cmd_saida       go to state 20
    cmd_atribuicao  go to state 21


State 18

   16 stmt: stmt_if •

    $default  reduce using rule 16 (stmt)


State 19

   17 stmt: stmt_while •

    $default  reduce using rule 17 (stmt)


State 20

   14 cmd: cmd_saida •

    $default  reduce using rule 14 (cmd)


State 21

   15 cmd: cmd_atribuicao •

    $default  reduce using rule 15 (cmd)


State 22

    8 lista_id: ID • ',' lista_id
    9         | ID •

    ','  shift, and go to state 31

    $default  reduce using rule 9 (lista_id)


State 23

    5 linha_decl: type $@1 lista_id • ';'

    ';'  shift, and go to state 32


State 24

   21 cmd_saida: ESCREVA '(' • expr ')'

    NUM  shift, and go to state 33
    ID   shift, and go to state 34

    expr  go to state 35
    term  go to state 36


State 25

   22 cmd_atribuicao: ID '=' • expr

    NUM  shift, and go to state 33
    ID   shift, and go to state 34

    expr  go to state 37
    term  go to state 36


State 26

   18 stmt_if: IF '(' • expr ')' '{' lista_cmds '}'
   19        | IF '(' • expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'

    NUM  shift, and go to state 33
    ID   shift, and go to state 34

    expr  go to state 38
    term  go to state 36


State 27

   20 stmt_while: WHILE '(' • expr ')' '{' lista_cmds '}'

    NUM  shift, and go to state 33
    ID   shift, and go to state 34

    expr  go to state 39
    term  go to state 36


State 28

    1 programa: declaracoes '{' lista_cmds '}' •

    $default  reduce using rule 1 (programa)


State 29

   10 lista_cmds: cmd ';' •
   12           | cmd ';' • lista_cmds

    ESCREVA  shift, and go to state 11
    ID       shift, and go to state 12
    IF       shift, and go to state 13
    WHILE    shift, and go to state 14

    $default  reduce using rule 10 (lista_cmds)

    lista_cmds      go to state 40
    cmd             go to state 16
    stmt            go to state 17
    stmt_if         go to state 18
    stmt_while      go to state 19
    cmd_saida       go to state 20
    cmd_atribuicao  go to state 21


State 30

   13 lista_cmds: stmt lista_cmds •

    $default  reduce using rule 13 (lista_cmds)


State 31

    8 lista_id: ID ',' • lista_id

    ID  shift, and go to state 22

    lista_id  go to state 41


State 32

    5 linha_decl: type $@1 lista_id ';' •

    $default  reduce using rule 5 (linha_decl)


State 33

   29 term: NUM •

    $default  reduce using rule 29 (term)


State 34

   30 term: ID •

    $default  reduce using rule 30 (term)


State 35

   21 cmd_saida: ESCREVA '(' expr • ')'
   24 expr: expr • binop term2

    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    DIV  shift, and go to state 44
    MUL  shift, and go to state 45
    ')'  shift, and go to state 46

    binop  go to state 47


State 36

   23 expr: term •

    $default  reduce using rule 23 (expr)


State 37

   22 cmd_atribuicao: ID '=' expr •
   24 expr: expr • binop term2

    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    DIV  shift, and go to state 44
    MUL  shift, and go to state 45

    $default  reduce using rule 22 (cmd_atribuicao)

    binop  go to state 47


State 38

   18 stmt_if: IF '(' expr • ')' '{' lista_cmds '}'
   19        | IF '(' expr • ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}'
   24 expr: expr • binop term2

    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    DIV  shift, and go to state 44
    MUL  shift, and go to state 45
    ')'  shift, and go to state 48

    binop  go to state 47


State 39

   20 stmt_while: WHILE '(' expr • ')' '{' lista_cmds '}'
   24 expr: expr • binop term2

    ADD  shift, and go to state 42
    SUB  shift, and go to state 43
    DIV  shift, and go to state 44
    MUL  shift, and go to state 45
    ')'  shift, and go to state 49

    binop  go to state 47


State 40

   12 lista_cmds: cmd ';' lista_cmds •

    $default  reduce using rule 12 (lista_cmds)


State 41

    8 lista_id: ID ',' lista_id •

    $default  reduce using rule 8 (lista_id)


State 42

   25 binop: ADD •

    $default  reduce using rule 25 (binop)


State 43

   26 binop: SUB •

    $default  reduce using rule 26 (binop)


State 44

   28 binop: DIV •

    $default  reduce using rule 28 (binop)


State 45

   27 binop: MUL •

    $default  reduce using rule 27 (binop)


State 46

   21 cmd_saida: ESCREVA '(' expr ')' •

    $default  reduce using rule 21 (cmd_saida)


State 47

   24 expr: expr binop • term2

    NUM  shift, and go to state 50
    ID   shift, and go to state 51

    term2  go to state 52


State 48

   18 stmt_if: IF '(' expr ')' • '{' lista_cmds '}'
   19        | IF '(' expr ')' • '{' lista_cmds '}' ELSE '{' lista_cmds '}'

    '{'  shift, and go to state 53


State 49

   20 stmt_while: WHILE '(' expr ')' • '{' lista_cmds '}'

    '{'  shift, and go to state 54


State 50

   31 term2: NUM •

    $default  reduce using rule 31 (term2)


State 51

   32 term2: ID •

    $default  reduce using rule 32 (term2)


State 52

   24 expr: expr binop term2 •

    $default  reduce using rule 24 (expr)


State 53

   18 stmt_if: IF '(' expr ')' '{' • lista_cmds '}'
   19        | IF '(' expr ')' '{' • lista_cmds '}' ELSE '{' lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ID       shift, and go to state 12
    IF       shift, and go to state 13
    WHILE    shift, and go to state 14

    lista_cmds      go to state 55
    cmd             go to state 16
    stmt            go to state 17
    stmt_if         go to state 18
    stmt_while      go to state 19
    cmd_saida       go to state 20
    cmd_atribuicao  go to state 21


State 54

   20 stmt_while: WHILE '(' expr ')' '{' • lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ID       shift, and go to state 12
    IF       shift, and go to state 13
    WHILE    shift, and go to state 14

    lista_cmds      go to state 56
    cmd             go to state 16
    stmt            go to state 17
    stmt_if         go to state 18
    stmt_while      go to state 19
    cmd_saida       go to state 20
    cmd_atribuicao  go to state 21


State 55

   18 stmt_if: IF '(' expr ')' '{' lista_cmds • '}'
   19        | IF '(' expr ')' '{' lista_cmds • '}' ELSE '{' lista_cmds '}'

    '}'  shift, and go to state 57


State 56

   20 stmt_while: WHILE '(' expr ')' '{' lista_cmds • '}'

    '}'  shift, and go to state 58


State 57

   18 stmt_if: IF '(' expr ')' '{' lista_cmds '}' •
   19        | IF '(' expr ')' '{' lista_cmds '}' • ELSE '{' lista_cmds '}'

    ELSE  shift, and go to state 59

    $default  reduce using rule 18 (stmt_if)


State 58

   20 stmt_while: WHILE '(' expr ')' '{' lista_cmds '}' •

    $default  reduce using rule 20 (stmt_while)


State 59

   19 stmt_if: IF '(' expr ')' '{' lista_cmds '}' ELSE • '{' lista_cmds '}'

    '{'  shift, and go to state 60


State 60

   19 stmt_if: IF '(' expr ')' '{' lista_cmds '}' ELSE '{' • lista_cmds '}'

    ESCREVA  shift, and go to state 11
    ID       shift, and go to state 12
    IF       shift, and go to state 13
    WHILE    shift, and go to state 14

    lista_cmds      go to state 61
    cmd             go to state 16
    stmt            go to state 17
    stmt_if         go to state 18
    stmt_while      go to state 19
    cmd_saida       go to state 20
    cmd_atribuicao  go to state 21


State 61

   19 stmt_if: IF '(' expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds • '}'

    '}'  shift, and go to state 62


State 62

   19 stmt_if: IF '(' expr ')' '{' lista_cmds '}' ELSE '{' lista_cmds '}' •

    $default  reduce using rule 19 (stmt_if)
